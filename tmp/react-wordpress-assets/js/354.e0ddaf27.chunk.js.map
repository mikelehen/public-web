{"version":3,"file":"static/js/354.e0ddaf27.chunk.js","mappings":"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","sources":["../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/mdurl/encode.js","../node_modules/style-to-object/index.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/index.js","../node_modules/unist-util-is/index.js","../node_modules/unist-util-visit-parents/index.js","../node_modules/unist-util-visit/index.js","../node_modules/unist-util-position/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/micromark-util-encode/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n * @returns {string}\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nfunction normalizeUri(value) {\n  /** @type {string[]} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = sanitizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = sanitizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","encodeCache","encode","string","exclude","keepEscaped","l","code","nextCode","cache","result","defaultChars","ch","String","fromCharCode","test","toUpperCase","charCodeAt","getEncodeCache","encodeURIComponent","componentChars","parse","require","iterator","output","hasIterator","len","protocols","uriTransformer","uri","url","first","colon","indexOf","index","protocol","toLowerCase","stringifyPosition","point","VFileMessage","place","origin","parts","undefined","message","stack","fatal","ruleId","actual","expected","file","note","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","join","joined","segments","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","data","messages","history","stored","map","includes","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","bail","getPrototypeOf","Symbol","toStringTag","wrap","middleware","callback","called","parameters","fnExpectsCallback","done","apply","exception","Promise","then","unified","base","frozen","transformers","fns","pipeline","run","values","middlewareIndex","pop","next","fn","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","Boolean","looksLikeAVFile","includeImageAlt","one","alt","all","children","splice","list","remove","items","chunkStart","from","unshift","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","document","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","element","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","d","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","concat","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","combined","u","props","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","pointStart","pointEnd","clean","unknown","h","augment","handlers","passThrough","returnNode","unknownHandler","nodes","characterReferences","sanitizeUri","skip","normalizeUri","questionMark","numberSign","slash","loose","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","disabled","child","properties","root","table","rows","align","row","out","cellIndex","cell","last","trimLines","toml","ignore","yaml","footnoteDefinition","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","thing","valid","dash","cap","kebab","camelcase","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","parentSchema","schema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","commas","v","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","defaultProps","propTypes","PropTypes"],"sourceRoot":""}